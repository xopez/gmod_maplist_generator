-- filepath: /Users/sascha/Documents/GitHub/gmod_maplist_generator/lua/autorun/maplist-generator

-- Read prefixes from /data/maplist-generator/prefixes.json
local function readPrefixes()
    local path = "maplist-generator/prefixes.json"
    if not file.Exists(path, "DATA") then
        local example = '[\n  "gm_",\n  "cs_"\n]'
        file.Write(path, example)
        print("Created data/" .. path .. " with example JSON content.")
    end
    local content = file.Read(path, "DATA") or "[]"
    local ok, prefixes = pcall(util.JSONToTable, content)
    if not ok or type(prefixes) ~= "table" then
        prefixes = {}
    end
    return prefixes
end

-- Configure your prefixes here
local prefixes = readPrefixes()

-- Ensure the data/maplist-generator directory exists
if not file.Exists("maplist-generator", "DATA") then
    file.CreateDir("maplist-generator")
end

-- Get all map names (without .bsp extension)
local all_maps = {}
for _, map in ipairs(file.Find("maps/*.bsp", "GAME")) do
    local name = map:match("^(.-)%.bsp$")
    if name then
        all_maps[#all_maps + 1] = name
    end
end

-- For each prefix, filter maps and save to /data/maplist-generator/<prefix>.txt
for _, prefix in ipairs(prefixes) do
    local filtered = {}
    for _, name in ipairs(all_maps) do
        if name:StartWith(prefix) then
            filtered[#filtered + 1] = name
        end
    end
    local filename = "maplist-generator/" .. prefix .. ".txt"
    file.Write(filename, table.concat(filtered, "\n"))
    print("Saved " .. #filtered .. " maps to data/" .. filename)
end
